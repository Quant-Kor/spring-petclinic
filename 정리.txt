컨트롤 시프트 엔 --> 파일명 검색

컨트롤 B --> 링크 따라가기

알트 + 인서트 생성자 자동생성(getter, setter)

컨트롤 + f9를 누르면 재시작 하지않고 변경된 사항 반영


IOC 설명부분
OwnerControlller를 보면 생성자에서 clinicService를 받아와서
owner에 주어서 사용하고 있는데 이 또한 IOC의 일종으로 볼 수 있음
만약 OwnerRepository가 없다면 owner와 관련된 명령들은 null명령이기 때문에 실행이 되지 않지만 OwnerRepository를 받아오기 때문에 실행이 됨 
그러면 이 OwnerRepository owner는 어디서 의존성을 받는가?
OwnerControllertest에 보면 mockbean으로 owner가 등록되어 있으며 이를 통해 자동으로 만들어진 객체가 빈으로 등록됨(스프링이 관리하는 객체)



IoC 컨테이너
applicationContext라는 것을 주로 사용해서 하지만 보통 빈에서 다 상속이 되어있기 때문에 applicationContext의 함수 GetBean로 갖고온 객체나 그냥 빈으로 상속받은 객체를 찍어보면 둘다 동일한 해시값을 갖고있는 것을 볼 수 있음 
--> 멀티 쓰레드 상황에서 싱글톤으로 할때 좋다고함 (이 부분은 정확히 이해 못함) 




Bean --> IOC 컨테이너 관리하는 객체!
빈으로 등록하기 위해서는
ComponentScan
Controller
Service 
등등 애노테이션을 붙여주면 됨!

또는 직접 일일히 등록하는 방법이 있음
@Configuration 과 @Bean 사용!

컨트롤 시프트 T --> 테스트 만들기
@Autowired를 통해 객체들을 가져와서 사용하는 것도 좋은방법중 하나
기존에는 생성자를 통해 주입받았다면 @Autowire는 간편하게 사용가능!



의존성 주입
생성자를 통한 방법을 가장 추천!
@Autowired 객체나 
@Autowired + setter를 통한것은 인스턴스를 의존성 없이 만들 수 있는데 이러한 장점 같은 부분이 순환참조가 발생할 수 있음!

